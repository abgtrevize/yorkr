{
    "collab_server" : "",
    "contents" : "##########################################################################################\n# Designed and developed by Tinniam V Ganesh\n# Date : 20 Mar 2016\n# Function: convertYaml2RDataframe\n# This function converts a given yaml file to a data frame and stores this as n .RData\n# The yaml file is read from a given source directory coverted and saved to a target directory.\n# The target file is the created by using the name of the opposing teams and the date of the match\n#\n###########################################################################################\n#' @title\n#' This function converts all Yaml files in source directory to data frames and saves as RData\n#'\n#' @description\n#' This function coverts all Yaml files from source directory to data frames. The data frames\n#' are then stored as .RData. The saved file is of the format team1-team2-date.RData\n#' For e.g. England-India-2008-04-06.RData etc\n#' @usage\n#' convertYaml2RDataframe(yamlFile,sourceDir=\".\",targetDir=\".\")\n#'\n#' @param yamlFile\n#' The  yaml file to be converted to dataframe and saved\n#'\n#' @param sourceDir\n#' The source directory of the yaml file\n#'\n#' @param targetDir\n#' The target directory in which the data frame is stored as RData file\n#'\n#' @return None\n#' @references\n#' \\url{http://cricsheet.org/}\\cr\n#' \\url{https://gigadom.wordpress.com/}\n#' @author\n#' Tinniam V Ganesh\n#' @note\n#' Maintainer: Tinniam V Ganesh \\email{tvganesh.85@gmail.com}\n#'\n#' @examples\n#' # In the example below ../yamldir c\n#' convertYaml2RDataframe(\"225171.yaml\",\".\",\"../data\")\n#'\n#' @seealso\n#' \\code{\\link{bowlerMovingAverage}}\n#' \\code{\\link{bowlerWicketPlot}}\n#' \\code{\\link{bowlerWicketsVenue}}\n#' \\code{\\link{convertAllYaml2RDataframes}}\n#'\n#' @export\n#'\nconvertYaml2RDataframe <- function(yamlFile,sourceDir=\".\",targetDir=\".\"){\n\n\n    pth = paste(sourceDir,\"/\",yamlFile,sep=\"\")\n    print(pth)\n\n    # Load yaml file\n    a <- yaml.load_file(pth)\n\n    # Cast as data frame for easy processing\n    b <- as.data.frame(a)\n    sz <- dim(b)\n\n    # Gather the meta information\n    meta <- select(b,info.dates,info.match_type,info.overs, info.venue,\n                   info.teams)\n    names(meta) <- c(\"date\",\"matchType\",\"overs\",\"venue\",\"team1\")\n\n    # Check if there was a winner or if there was no result (tie,draw)\n    if(!is.null(b$info.outcome.winner)){\n        meta$winner <- b$info.outcome.winner\n        meta$result <- \"NA\"\n    } else if(!is.null(b$info.result)){\n        meta$winner <- \"NA\"\n        meta$result <- b$info.result\n    } else if(!is.null(b$info.outcome.result)){\n        meta$winner <- \"NA\"\n        meta$result <- b$info.outcome.result\n    }\n\n    meta$team2 = meta[2,5]\n    meta <- meta[1,]\n\n\n    #Reorder columns\n    meta <- select(meta,date,matchType,overs,venue,team1,team2,winner,result)\n\n    # Remove the innings and deliveries from the column names\n    names(b) <-gsub(\"innings.\",\"\",names(b))\n    names(b) <- gsub(\"deliveries.\",\"\",names(b))\n\n    # Create an empty data frame\n    overs <- data.frame(ball=character(),team=factor(),batsman=factor(),\n                        bowler=factor(),nonStriker=factor(),byes=numeric(),\n                        legbyes=numeric(), noballs=numeric(), wides=numeric(),\n                        nonBoundary=factor(), penalty=factor(),\n                        runs=factor(),extras=factor(),totalRuns=factor(),\n                        wicketFielder=character(), wicketKind=character(),\n                        wicketPlayerOut=character(),date=factor(),\n                        matchType=factor(),\n                        overs=integer(),venue=factor(),team1=factor(),team2=factor(),\n                        winner=character(),result=character())\n\n\n    #Choose the columns which have the ball by ball detail\n    idx = which(names(b) == \"1st.0.1.batsman\")\n    m <- b[1,idx:sz[2]]\n    #Transpose to the details of the match\n    match <- t(m)\n    rnames <- rownames(match)\n\n    match <- as.data.frame(cbind(rnames,match))\n\n    # Gather details for first team\n\n    # Set the number of overs to 50 for ODI matches\n    numOver <- seq(from=0,to=50,by=1)\n\n    # Create string of delivery in each over upto delivery 16 in case of no balls,\n    # wides etc.\n    # Note: The over can be more than .6 when you have no balls, wides etc\n    d <- c(\".1\",\".2\",\".3\",\".4\",\".5\",\".6\",\".7\",\".8\",\".9\",\".11\",\".12\",\n           \".13\",\".14\",\".15\",\".16\")\n\n    m <- 1\n    # Create a vector of deliveries from 0 to 50 by concatenating string\n    delivery <- NULL\n    for(k in 1:length(numOver)){\n        for(l in 1:length(d)){\n            delivery[m] <- paste(numOver[k],d[l],sep=\"\")\n            m=m+1\n        }\n    }\n\n\n    #Create string for 1st team\n    print(\"first loop\")\n    s <- paste(\"1st.\",delivery,\"\\\\.\",sep=\"\")\n    team1 <- b$`1st.team`[1]\n    # Parse the yaml file over by over and store as a row of data\n    overs1 <- parseYamlOver(match,s,team1,overs,delivery,meta)\n\n\n    # Create string for 2nd team\n    print(\"second loop\")\n    s1 <- paste(\"2nd.\",delivery,\"\\\\.\",sep=\"\")\n    team2 <- b$`2nd.team`[1]\n    overs2 <- parseYamlOver(match,s1,team2,overs,delivery,meta)\n\n    # Row bind the 1dst\n    overs <- rbind(overs1,overs2)\n\n    # Change factors to appropiate type\n    overs$byes <- as.numeric(as.character(overs$byes))\n    overs$legbyes <- as.numeric(as.character(overs$legbyes))\n    overs$wides <- as.numeric(as.character(overs$wides))\n    overs$noballs <- as.numeric(as.character(overs$noballs))\n    overs$nonBoundary <- as.numeric(as.character(overs$nonBoundary))\n    overs$penalty <- as.numeric(as.character(overs$penalty))\n    overs$runs <- as.numeric(as.character(overs$runs))\n    overs$extras <- as.numeric(as.character(overs$extras))\n    overs$totalRuns <- as.numeric(as.character(overs$totalRuns))\n    overs$date = as.Date(overs$date)\n    overs$overs <- as.numeric(as.character(overs$overs))\n    sapply(overs,class)\n\n\n    teams <- as.character(unique(overs$team))\n    #Create a unique file which is based on the opposing teams and the date of the match\n    filename <- paste(meta$team1,\"-\",meta$team2,\"-\",meta$date,\".\",\n                      \"RData\",sep=\"\")\n\n    to <- paste(targetDir,\"/\",filename,sep=\"\")\n    # Save as .RData\n    save(overs,file=to)\n    # Write the name of the file that was converted and the converted file for reference\n    convertedFile <- paste(yamlFile,filename,sep=\":\")\n    outputFile <- paste(targetDir,\"/\",\"convertedFiles.txt\",sep=\"\")\n    write(convertedFile,outputFile,append=TRUE)\n\n\n}\n\n\n\n\n",
    "created" : 1458998545453.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3688618051",
    "id" : "1E322696",
    "lastKnownWriteTime" : 1458998926,
    "last_content_update" : 1458998926515,
    "path" : "C:/software/cricket-package/york-test/yorkr/R/convertYaml2RDataframe.R",
    "project_path" : "R/convertYaml2RDataframe.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}