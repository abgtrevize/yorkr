{
    "collab_server" : "",
    "contents" : "##########################################################################################\n# Designed and developed by Tinniam V Ganesh\n# Date : 26 Mar 2016\n# Function: teamBowlingPerfDetails\n# This function uses gets the bowling performance of a team\n#\n###########################################################################################\n#' @title\n#' Compute the performance of bowlers of a team. This function is used internally by getTeamBowlingDetails\n#'\n#' @description\n#' This function computes performance of bowlers of a team a\n#'\n#' @usage\n#' teamBowlingPerfDetails(match,theTeam,includeInfo=FALSE)\n#'\n#' @param match\n#' The data frame of all match\n#'\n#' @param theTeam\n#' The team for which the performance is required\n#'\n#' @param includeInfo\n#' If true details like venie,winner, result etc are included\n#'\n#' @param plot\n#' If plot=TRUE then a plot is displayed else a dataframe is returned\n#'\n#'\n#' @return dataframe\n#' The dataframe of bowling performance\n#'\n#' @references\n#' \\url{http://cricsheet.org/}\\cr\n#' \\url{https://gigadom.wordpress.com/}\n#' @author\n#' Tinniam V Ganesh\n#' @note\n#' Maintainer: Tinniam V Ganesh \\email{tvganesh.85@gmail.com}\n#'\n#' @examples\n#' # Get all matches between India and Australia\n#' match <- getMatchDetails(\"England\",\"Pakistan\",\"2006-09-05\",dir=\"../temp\")\n#' teamBowlingPerf(match,\"India\",includeInfo=TRUE)\n#'\n#'\n#' @seealso\n#' \\code{\\link{teamBatsmanPartnershipAllOppnAllMatches}}\n#' \\code{\\link{teamBatsmanPartnershipAllOppnAllMatchesPlot}}\n#' \\code{\\link{teamBatsmanPartnershipOppnAllMatchesChart}}\n#' \\code{\\link{teamBowlersVsBatsmanAllOppnAllMatchesRept}}\n#' \\code{\\link{teamBowlerWicketRunsOppnAllMatches}}\n#'\n#' @export\n#'\nteamBowlingPerfDetails <- function(match,theTeam,includeInfo=FALSE){\n\n    # Initialise to NULL\n    l <- NULL\n    a <-filter(match,team!=theTeam)\n    sz <- dim(a)\n    if(sz[1] == 0){\n        #cat(\"No bowling records.\\n\")\n        return(NULL)\n    }\n\n    a1 <- unlist(strsplit(a$ball[1],\"\\\\.\"))\n    # Create a string for substitution 1st or 2nd\n    a2 <- paste(a1[1],\"\\\\.\",sep=\"\")\n    # only wides and noballs need to be included with runs for bowlers.\n    # Note: byes and legbyes should not be included\n    b <-  a %>%\n        select(bowler,ball,noballs,wides,runs,wicketKind,wicketPlayerOut) %>%\n        #mutate(over=gsub(\"1st\\\\.\",\"\",ball)) %>%\n        mutate(over=gsub(a2,\"\",ball)) %>%\n        mutate(over=gsub(\"\\\\.\\\\d+\",\"\",over))\n\n    #Calculate the number of maiden overs\n    c <- summarise(group_by(b,bowler,over),sum(runs,wides,noballs))\n    names(c) <- c(\"bowler\",\"over\",\"runsConceded\")\n    d <-summarize(group_by(c,bowler),maidens=sum(runsConceded==0))\n\n    #Compute total runs conceded (runs_wides+noballs)\n    e <- summarize(group_by(c,bowler),runs=sum(runsConceded))\n\n    # Calculate the number of overs bowled by each bwler\n    f <- select(c,bowler,over)\n    g <- summarise(group_by(f,bowler),overs=length(unique(over)))\n\n\n    #Compute number of wickets\n    h <- b %>%\n        select(bowler,wicketKind,wicketPlayerOut) %>%\n        filter(wicketPlayerOut != \"nobody\")\n    #i <- summarise(group_by(h,bowler),wickets=length(unique(wicketPlayerOut)))\n\n    #Join the over & maidens\n    j <- full_join(g,d,by=\"bowler\")\n    # Add runs\n    k <- full_join(j,e,by=\"bowler\")\n    # Add wickets\n    l <- full_join(k,h,by=\"bowler\")\n\n    # Remove unnecessary factors\n    l$wicketPlayerOut <-factor(l$wicketPlayerOut)\n    l$wicketKind <- factor(l$wicketKind)\n\n    # Set as character to assign values\n    l$wicketPlayerOut <- as.character(l$wicketPlayerOut)\n    l$wicketKind <- as.character(l$wicketKind)\n\n    # Set NAs to none\n    if(sum(is.na(l$wicketKind)) != 0){\n        l[is.na(l$wicketKind),]$wicketKind <-\"none\"\n    }\n\n    if(sum(is.na(l$wicketPlayerOut)) != 0){\n        l[is.na(l$wicketPlayerOut),]$wicketPlayerOut=\"nobody\"\n    }\n    l\n\n\n\n    #Calculate strike rate\n    l <- mutate(l,economyRate=round(((runs/overs)),2))\n\n    # Determine the opposition\n    t <- match$team != theTeam\n    # Pick the 1st element\n\n    t1 <- match$team[t]\n    opposition <- as.character(t1[1])\n\n    if(includeInfo == TRUE) {\n        l$date <- a$date[1]\n        l$venue <- a$venue[1]\n        l$opposition <- opposition\n        l$winner <- a$winner[1]\n        l$result <- a$result[1]\n    }\n\n\n    l\n\n}\n",
    "created" : 1459010839598.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3905477147",
    "id" : "B8277E45",
    "lastKnownWriteTime" : 1459011145,
    "last_content_update" : 1459011145566,
    "path" : "C:/software/cricket-package/york-test/yorkr/R/teamBowlingPerfDetails.R",
    "project_path" : "R/teamBowlingPerfDetails.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}