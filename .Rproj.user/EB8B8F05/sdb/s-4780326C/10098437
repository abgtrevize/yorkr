{
    "collab_server" : "",
    "contents" : "##########################################################################################\n# Designed and developed by Tinniam V Ganesh\n# Date : 20 Mar 2016\n# Function: teamBattingScorecardMatch\n# This function gets the batting scorecard of team in a match. The result is\n# returned as a data frame\n#\n###########################################################################################\n#' @title\n#' Compute and return the batting scorecard of a team in a match\n#'\n#' @description\n#' This function computes returns the batting scorecard (runs, fours, sixes, balls played) for the\n#' team\n#' @usage\n#' teamBattingScorecardMatch(match,theTeam)\n#'\n#' @param match\n#' The match for which the score card is required e.g.\n#'\n#' @param name\n#' Team for which scorecard required\n#'\n#' @return scorecard\n#' A data frame with the batting scorecard\n#' @references\n#' \\url{http://cricsheet.org/}\\cr\n#' \\url{https://gigadom.wordpress.com/}\n#' @author\n#' Tinniam V Ganesh\n#' @note\n#' Maintainer: Tinniam V Ganesh \\email{tvganesh.85@gmail.com}\n#'\n#' @examples\n#' a <- getMatchDetails(\"England\",\"Pakistan\",\"2006-09-05\",dir=\"../temp\")\n#' teamBowlingScorecardMatch(a,'England')\n#'\n#'\n#' @seealso\n#' \\code{\\link{teamBatsmanPartnershipAllOppnAllMatches}}\n#' \\code{\\link{teamBatsmanPartnershipAllOppnAllMatchesPlot}}\n#' \\code{\\link{teamBatsmanPartnershipOppnAllMatchesChart}}\n#'\n#' @export\n#'\n\nteamBattingScorecardMatch <- function(match,theTeam){\n    a <-filter(match,team==theTeam)\n    sz <- dim(a)\n    if(sz[1] == 0){\n        cat(\"No batting records.\\n\")\n        return(NULL)\n    }\n    b <- select(a,batsman,runs)\n\n    names(b) <-c(\"batsman\",\"runs\")\n    #Compute the number of 4s\n    c <-\n        b %>%\n        mutate(fours=(runs>=4 & runs <6)) %>%\n        filter(fours==TRUE)\n\n    # Group by batsman. Count 4s\n    d <-    summarise(group_by(c, batsman),fours=n())\n\n    # Get the total runs for each batsman\n    e <-summarise(group_by(a,batsman),sum(runs))\n    names(b) <-c(\"batsman\",\"runs\")\n    details <- full_join(e,d,by=\"batsman\")\n    names(details) <-c(\"batsman\",\"runs\",\"fours\")\n\n    f <-\n        b %>%\n        mutate(sixes=(runs ==6)) %>%\n        filter(sixes == TRUE)\n\n    # Group by batsman. oOunt 6s\n    g <- summarise(group_by(f, batsman),sixes=n())\n    names(g) <-c(\"batsman\",\"sixes\")\n    #Full join with 4s and 6s\n    details <- full_join(details,g,by=\"batsman\")\n\n    # Count the balls played by the batsman\n    ballsPlayed <-\n        a  %>%\n        select(batsman,byes,legbyes,wides,noballs,runs) %>%\n        filter(wides ==0,noballs ==0,byes ==0,legbyes == 0) %>%\n        select(batsman,runs)\n    ballsPlayed<- summarise(group_by(ballsPlayed,batsman),count=n())\n    names(ballsPlayed) <- c(\"batsman\",\"ballsPlayed\")\n\n\n    details <- full_join(details,ballsPlayed,by=\"batsman\")\n    cat(\"Total=\",sum(details$runs),\"\\n\")\n    # If there are NAs then\n    if(sum(is.na(details$fours)) != 0){\n         details[is.na(details$fours),]$fours <- 0\n    }\n    if(sum(is.na(details$sixes)) != 0){\n        details[is.na(details$sixes),]$sixes <- 0\n    }\n    # Out the details\n    details <- select(details,batsman,ballsPlayed,fours,sixes,runs)\n    details\n\n}\n",
    "created" : 1459000919376.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3350822084",
    "id" : "10098437",
    "lastKnownWriteTime" : 1459001332,
    "last_content_update" : 1459001332610,
    "path" : "C:/software/cricket-package/york-test/yorkr/R/teamBattingScorecardMatch.R",
    "project_path" : "R/teamBattingScorecardMatch.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}